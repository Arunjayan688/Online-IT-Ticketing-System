@model List<TicketModel>
<style>
    .zoom-container {
        position: relative;
        display: inline-block;
        cursor: zoom-in;
    }

        .zoom-container img {
            max-width: 100px;
            transition: transform 0.2s ease-in-out;
        }

        .zoom-container:hover img {
            transform: scale(7); /* Adjust scale factor for zoom level */
            z-index: 1000;
        }

        .zoom-container:hover {
            z-index: 1000;
        }
</style>

<div class="container my-5">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white text-center">
            <h2>Your Tickets</h2>
        </div>
        <div class="card-body">
            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover align-middle text-center">
                        <thead class="table-dark">
                            <tr>
                                <th scope="col">Ticket ID</th>
                                <th scope="col"> Topic</th>
                                <th scope="col">Subject</th>
                                <th scope="col">Category</th>
                                <th scope="col">Creation Date</th>
                                <th> Attachments</th>
                                <th scope="col">Status</th>
                                <th scope="col"> Messages</th>

                                
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var ticket in Model)
                            {
                                <tr>
                                    <td>@ticket.TicketId</td>
                                    <td>@ticket.Topic</td>
                                    <td>@ticket.Subject</td>
                                    <td>@ticket.Category</td>
                                    <td>@ticket.CreationDate.ToString("yyyy-MM-dd HH:mm")</td>
                                
                                    <td>
                                        @if (ticket.AttachmentData != null)
                                        {
                                            string base64Image = Convert.ToBase64String(ticket.AttachmentData);
                                            <div class="zoom-container">
                                                <img src="data:image/png;base64,@base64Image" alt="Attachment" class="img-thumbnail" />
                                            </div>
                                        }
                                        else
                                        {
                                            <span>No Attachment</span>
                                        }
                                    </td>
                   
                                    <td>
                                        <span class="badge @GetStatusBadgeClass(ticket.Status)">
                                            @ticket.Status
                                        </span>
                                    </td>
                                    <td>
                                        <!-- New Section to Display Messages -->
                                        <div class="messages">
                                            @foreach (var message in ticket.Messages)
                                            {
                                                <div>
                                                    @* <strong>@message.SentDate.ToString("yyyy-MM-dd HH:mm"):</strong> *@
                                                    <p>@message.Message</p>
                                                </div>
                                                <hr />
                                            }
                                        </div>
                                    </td>
                                   
                                    
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-warning text-center" role="alert">
                    <strong>No tickets found!</strong> You haven't registered any complaints yet.
                </div>
            }
        </div>
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status.ToLower() switch
        {
            "open" => "bg-success",
            "in progress" => "bg-primary",
            "closed" => "bg-danger",
            _ => "bg-primary"
        };
    }
}
